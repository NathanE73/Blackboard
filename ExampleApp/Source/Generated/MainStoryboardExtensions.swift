//
//  MainStoryboardExtensions.swift
//
//  This file is automatically generated; do not modify.
//

import UIKit

private let sharedStoryboardInstance = UIStoryboard(name: "Main", bundle: nil)

private class InitializeBlockObject {
    
    let block: ((UIViewController) -> Void)
    
    init(block: @escaping ((UIViewController) -> Void)) {
        self.block = block
    }
    
}

extension MainViewController {
    
    final class func instantiateViewControllerFromStoryboard(_ initialize: ((_ mainViewController: MainViewController) -> Void)? = nil) -> MainViewController {
        let viewController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "WelcomeViewController") as! MainViewController
        initialize?(viewController)
        return viewController
    }
    
    // Segues
    
    enum SegueIdentifier: String {
        case presentAccounts = "Present Accounts"
        case presentOpenAccount = "PresentOpenAccount"
        case presentPhotos = "Present Photos"
    }
    
    func handleSegue(_ segue: UIStoryboardSegue, sender: Any?) {
        if let initializeBlockObject = sender as? InitializeBlockObject {
            initializeBlockObject.block(segue.destination)
        }
    }
    
    final func performPresentAccountsSegue(_ initialize: @escaping ((AccountsTableViewController) -> Void) = {_ in}) {
        let initializeBlock = InitializeBlockObject() {
            let navigationController = $0 as! AccountsNavigationController
            let viewController = navigationController.viewControllers.first as! AccountsTableViewController
            initialize(viewController)
        }
        performSegue(withIdentifier: SegueIdentifier.presentAccounts.rawValue, sender: initializeBlock)
    }
    
    final func performPresentOpenAccountSegue(_ initialize: @escaping ((OpenAccountViewController) -> Void) = {_ in}) {
        let initializeBlock = InitializeBlockObject() {
            let navigationController = $0 as! UINavigationController
            let viewController = navigationController.viewControllers.first as! OpenAccountViewController
            initialize(viewController)
        }
        performSegue(withIdentifier: SegueIdentifier.presentOpenAccount.rawValue, sender: initializeBlock)
    }
    
    final func performPresentPhotosSegue(_ initialize: @escaping ((PhotosCollectionViewController) -> Void) = {_ in}) {
        let initializeBlock = InitializeBlockObject() {
            let navigationController = $0 as! PhotosNavigationController
            let viewController = navigationController.viewControllers.first as! PhotosCollectionViewController
            initialize(viewController)
        }
        performSegue(withIdentifier: SegueIdentifier.presentPhotos.rawValue, sender: initializeBlock)
    }
    
}
