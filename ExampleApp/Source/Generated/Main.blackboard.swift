//
//  Main.blackboard.swift
//
//  This file is automatically generated; do not modify.
//

import UIKit

private let sharedStoryboardInstance = UIStoryboard(name: "Main", bundle: nil)

private class SegueInitialization {
    
    typealias Block = (UIViewController) -> Void
    
    let block: Block
    
    init(block: @escaping Block) {
        self.block = block
    }
    
}

extension MainViewController {
    
    final class func instantiateFromStoryboard(_ initialize: ((_ mainViewController: MainViewController) -> Void)? = nil) -> MainViewController {
        let viewController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "WelcomeViewController") as! MainViewController
        initialize?(viewController)
        return viewController
    }
    
    // Segues
    
    enum SegueIdentifier: String {
        case presentAccounts = "Present Accounts"
        case presentOpenAccount = "PresentOpenAccount"
        case presentPhotos = "Present Photos"
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let segueInitialization = sender as? SegueInitialization {
            segueInitialization.block(segue.destination)
        }
    }
    
    final func performPresentAccountsSegue(_ initialize: ((AccountsTableViewController) -> Void)? = nil) {
        var segueInitialization: SegueInitialization?
        if let initialize = initialize {
            segueInitialization = SegueInitialization {
                let navigationController = $0 as! AccountsNavigationController
                let viewController = navigationController.viewControllers.first as! AccountsTableViewController
                initialize(viewController)
            }
        }
        performSegue(withIdentifier: SegueIdentifier.presentAccounts.rawValue, sender: segueInitialization)
    }
    
    final func performPresentOpenAccountSegue(_ initialize: ((OpenAccountViewController) -> Void)? = nil) {
        var segueInitialization: SegueInitialization?
        if let initialize = initialize {
            segueInitialization = SegueInitialization {
                let navigationController = $0 as! UINavigationController
                let viewController = navigationController.viewControllers.first as! OpenAccountViewController
                initialize(viewController)
            }
        }
        performSegue(withIdentifier: SegueIdentifier.presentOpenAccount.rawValue, sender: segueInitialization)
    }
    
    final func performPresentPhotosSegue(_ initialize: ((PhotosCollectionViewController) -> Void)? = nil) {
        var segueInitialization: SegueInitialization?
        if let initialize = initialize {
            segueInitialization = SegueInitialization {
                let navigationController = $0 as! PhotosNavigationController
                let viewController = navigationController.viewControllers.first as! PhotosCollectionViewController
                initialize(viewController)
            }
        }
        performSegue(withIdentifier: SegueIdentifier.presentPhotos.rawValue, sender: segueInitialization)
    }
    
}
