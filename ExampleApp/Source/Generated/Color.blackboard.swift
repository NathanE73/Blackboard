//
//  Color.blackboard.swift
//
//  This file is automatically generated; do not modify.
//

import SwiftUI

private let bundle: Bundle = {
#if SWIFT_PACKAGE
    Bundle.module
#else
    class Object: NSObject { }
    return Bundle(for: Object.self)
#endif
}()

public extension Color {
    
    init(asset colorAsset: ColorAsset) {
        self.init(colorAsset.name, bundle: bundle)
    }
    
#if swift(<5.9.0)
    static var absoluteZero: Color { Color(asset: .absoluteZero) }
    static var bisque: Color { Color(asset: .bisque) }
    static var charcoal: Color { Color(asset: .charcoal) }
    static var darkOliveGreen: Color { Color(asset: .darkOliveGreen) }
    static var desire: Color { Color(asset: .desire) }
    static var emerald: Color { Color(asset: .emerald) }
    static var empty: Color { Color(asset: .empty) }
    static var firebrick: Color { Color(asset: .firebrick) }
    enum Fluorescent {
        static var blizzardBlue: Color { Color(asset: .Fluorescent.blizzardBlue) }
        static var magicMint: Color { Color(asset: .Fluorescent.magicMint) }
        static var radicalRed: Color { Color(asset: .Fluorescent.radicalRed) }
    }
    static var maroon: Color { Color(asset: .maroon) }
    static var night: Color { Color(asset: .night) }
#endif
    
}

#if swift(<5.9.0)
public extension ShapeStyle where Self == Color {
    
    static var absoluteZero: Color { Color(asset: .absoluteZero) }
    static var bisque: Color { Color(asset: .bisque) }
    static var charcoal: Color { Color(asset: .charcoal) }
    static var darkOliveGreen: Color { Color(asset: .darkOliveGreen) }
    static var desire: Color { Color(asset: .desire) }
    static var emerald: Color { Color(asset: .emerald) }
    static var empty: Color { Color(asset: .empty) }
    static var firebrick: Color { Color(asset: .firebrick) }
    static var maroon: Color { Color(asset: .maroon) }
    static var night: Color { Color(asset: .night) }
    
}
#endif
