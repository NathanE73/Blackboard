//
// Copyright (c) 2019 Nathan E. Walczak
//
// MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

import Foundation

let MainStoryboardSwiftSource = """
//
//  MainStoryboardExtensions.swift
//
//  This file is automatically generated; do not modify.
//

import UIKit

private let sharedStoryboardInstance = UIStoryboard(name: "Main", bundle: nil)

private class InitializeBlockObject {
    
    let block: ((UIViewController) -> Void)
    
    init(block: @escaping ((UIViewController) -> Void)) {
        self.block = block
    }
    
}

extension MainViewController {
    
    final class func instantiateViewControllerFromStoryboard(_ initialize: ((_ mainViewController: MainViewController) -> Void)? = nil) -> MainViewController {
        let viewController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "WelcomeViewController") as! MainViewController
        initialize?(viewController)
        return viewController
    }
    
    // Segues
    
    enum SegueIdentifier: String {
        case presentAccounts = "Present Accounts"
        case presentOpenAccount = "PresentOpenAccount"
        case presentPhotos = "Present Photos"
    }
    
    func handleSegue(_ segue: UIStoryboardSegue, sender: Any?) {
        if let initializeBlockObject = sender as? InitializeBlockObject {
            initializeBlockObject.block(segue.destination)
        }
    }
    
    final func performPresentAccountsSegue(_ initialize: @escaping ((AccountsTableViewController) -> Void) = {_ in}) {
        let initializeBlock = InitializeBlockObject() {
            let navigationController = $0 as! AccountsNavigationController
            let viewController = navigationController.viewControllers.first as! AccountsTableViewController
            initialize(viewController)
        }
        performSegue(withIdentifier: SegueIdentifier.presentAccounts.rawValue, sender: initializeBlock)
    }
    
    final func performPresentOpenAccountSegue(_ initialize: @escaping ((OpenAccountViewController) -> Void) = {_ in}) {
        let initializeBlock = InitializeBlockObject() {
            let navigationController = $0 as! UINavigationController
            let viewController = navigationController.viewControllers.first as! OpenAccountViewController
            initialize(viewController)
        }
        performSegue(withIdentifier: SegueIdentifier.presentOpenAccount.rawValue, sender: initializeBlock)
    }
    
    final func performPresentPhotosSegue(_ initialize: @escaping ((PhotosCollectionViewController) -> Void) = {_ in}) {
        let initializeBlock = InitializeBlockObject() {
            let navigationController = $0 as! PhotosNavigationController
            let viewController = navigationController.viewControllers.first as! PhotosCollectionViewController
            initialize(viewController)
        }
        performSegue(withIdentifier: SegueIdentifier.presentPhotos.rawValue, sender: initializeBlock)
    }
    
}

"""
