//
// Copyright (c) 2019 Nathan E. Walczak
//
// MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

import Foundation

let PhotoStoryboardSwiftSource = """
//
//  Photo.blackboard.swift
//
//  This file is automatically generated; do not modify.
//

import UIKit

private let sharedStoryboardInstance = UIStoryboard(name: "Photo", bundle: nil)

private class SegueInitialization {
    
    typealias Block = (UIViewController) -> Void
    
    let block: Block
    
    init(block: @escaping Block) {
        self.block = block
    }
    
}

protocol PhotoViewControllerSegues {
}

extension PhotoViewControllerSegues {
}

extension PhotoViewController: PhotoViewControllerSegues {
    
    final class func instantiateFromStoryboard(_ initialize: ((_ photoViewController: PhotoViewController) -> Void)? = nil) -> PhotoViewController {
        let viewController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "PhotoViewController") as! PhotoViewController
        initialize?(viewController)
        return viewController
    }
    
    final class func instantiateNavigationControllerFromStoryboard(_ initialize: ((_ photoViewController: PhotoViewController) -> Void)? = nil) -> UINavigationController {
        let navigationController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "PhotoNavigationController") as! UINavigationController
        let viewController = navigationController.viewControllers.first as! PhotoViewController
        initialize?(viewController)
        return navigationController
    }
    
    // Segues
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    }
    
}

protocol PhotosCollectionViewControllerSegues {
}

extension PhotosCollectionViewControllerSegues {
    
    func prepareForShowPhotoSegue(photoViewController: PhotoViewController) {
    }
    
}

extension PhotosCollectionViewController: PhotosCollectionViewControllerSegues {
    
    final class func instantiateFromStoryboard(_ initialize: ((_ photosCollectionViewController: PhotosCollectionViewController) -> Void)? = nil) -> PhotosCollectionViewController {
        let viewController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "PhotoCollectionViewController") as! PhotosCollectionViewController
        initialize?(viewController)
        return viewController
    }
    
    final class func instantiateNavigationControllerFromStoryboard(_ initialize: ((_ photosCollectionViewController: PhotosCollectionViewController) -> Void)? = nil) -> UINavigationController {
        let navigationController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "PhotosNavigationController") as! UINavigationController
        let viewController = navigationController.viewControllers.first as! PhotosCollectionViewController
        initialize?(viewController)
        return navigationController
    }
    
    // Segues
    
    enum SegueIdentifier: String {
        case showPhoto = "Show Photo"
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let segueInitialization = sender as? SegueInitialization {
            segueInitialization.block(segue.destination)
            return
        }
        
        guard let identifier = segue.identifier else {
            return
        }
        
        switch SegueIdentifier(rawValue: identifier) {
        case .showPhoto?:
            let viewController = segue.destination as! PhotoViewController
            prepareForShowPhotoSegue(photoViewController: viewController)
        default:
            break
        }
    }
    
    final func performShowPhotoSegue(_ initialize: ((PhotoViewController) -> Void)? = nil) {
        var segueInitialization: SegueInitialization?
        if let initialize = initialize {
            segueInitialization = SegueInitialization {
                initialize($0 as! PhotoViewController)
            }
        }
        performSegue(withIdentifier: SegueIdentifier.showPhoto.rawValue, sender: segueInitialization)
    }
    
    // Collection View Cells
    
    enum CollectionViewCellIdentifier: String {
        case photo = "Photo"
    }
    
    final func dequeuePhotoCell(from collectionView: UICollectionView, for indexPath: IndexPath, initialize: ((_ photoCell: PhotoCollectionViewCell) -> Void)? = nil) -> PhotoCollectionViewCell {
        let collectionViewCell = collectionView.dequeueReusableCell(withReuseIdentifier: CollectionViewCellIdentifier.photo.rawValue, for: indexPath) as! PhotoCollectionViewCell
        initialize?(collectionViewCell)
        return collectionViewCell
    }
    
}

protocol PhotosNavigationControllerSegues {
}

extension PhotosNavigationControllerSegues {
}

extension PhotosNavigationController: PhotosNavigationControllerSegues {
    
    final class func instantiateFromStoryboard(_ initialize: ((_ photosNavigationController: PhotosNavigationController) -> Void)? = nil) -> PhotosNavigationController {
        let viewController = sharedStoryboardInstance.instantiateViewController(withIdentifier: "PhotosNavigationController") as! PhotosNavigationController
        initialize?(viewController)
        return viewController
    }
    
    // Segues
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    }
    
}

"""
